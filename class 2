//3 type variable -> var,let,const

// Var

// var name;
// name = "Chadni";
// console.log(name);


 var name = "Jahani Shabnam Chadni";
 console.log(name);



x = 5;
y = 6;
z = x + y;
console.log(z);



//##

var number = 50;

function print() {
    var square = number + number ;
    console.log(square);

}
console.log(number);   //50
print()  //100



//##

//  var number = 50;
//  var square = number + number ;
//  console.log(square);   //out->100

 var number = 50;
 var number = 40;     //var can be redeclared
 var square = number + number ;
console.log(square);         // out-> 80






// Let  can not be redeclared

 let number1 = 50;
 //let number1 = 40;             //again can not be declared  to error dibe
 let square1 = number1 + number1 ;
console.log(square1);           // so, out-> 100


let number2 = 60;
number2 = 80;                   // but same name use kore reassign korte parbe 
let square2 = number2 + number2 ;
console.log(square2);           // so, out-> 160





//Const

const number3 = 20;
//const number3 = 20;         //again can not be declared  to error dibe
//number3 = 10;               // also can not reassign w8 same name
const square3 = number3 + number3 ;
console.log(square3);         // so, out-> 100



//const PI = 3.14;    //correct

//const PI;      //incorrect
//PI = 3.14;




//##### block scope

/*
{
    let x =2;
}
*/





// js data type


//primitive
// numbers
// let length = 12;
// let weight = 40;

// // String 
// let color = "Blue";
// let lastname = "Shabnam";

// //Booleans
// let a = true;
// let b = false;



// //non primitive
// //object
// const person = {firstname : "Jahani" , lastname : "Chadni"};


// //Array object
// const cars = ("saab", "volvo" ,"BMW" );

// //date object
// const date = new Date ("2001-01-03");




// let x ;          // x is undefined
// x = 5 ;         // x is a number
// x = "chadni"   // x is a string



// check data type
const nam = typeof "Chadni";
console.log(nam);      // out-> string




//Statement

let a = 2;
if(a == 2){
    console.log("test");     //out ->test

}


//#####  for loop

//nested 

for (let i = 0; i < 5; i++){
    for(let j = 0; j < 5; j++){
        console.log(i , j);
    }
}


// for(;;){                          //infinite loop cz no condition
//     console.log("print");    

// }





 let text = "";
for(let i = 0; i < 10; i++){
     if(i==3) {continue;}
     text += "the number is " + i + "<br>" ;   //2nd line e to jache na same line e thakche <br> o print hocche
 }
 console.log(text);




//  function

function functionTwo() {
    console.log("Hellow !!!");
}
functionTwo();



function functionA(a,b) {                //parameter
    console.log(a,b);
}
functionA("chadni", "EWU");               //argument






// // code thik ache ? 

// function functionB(a,b) {       
//    return a + " " + b;                                  // return kore dibe
// }
// functionB("chadni", "Viqi");  



// var func = function functionC(a,b) {               // function expression er madhome store
//     return a + " " + b;    
        
// };
// // functionC("chadni", "Viqi");  
// func("chadni", "Viqi");



// //Arrow function

// const functionD = (a,b) => {
//     return a + " " + b ;  
// }
// functionD("jahani", "Viqi"); 


// //ai 3 ta code thik ache ?




var func = function functionC(a,b) {               // function expression er madhome store
    // return a + " " + b;    
    console.log(a,b);      
 };
 // functionC("chadni", "Viqi");  
 func("chadni", "Viqi");



//Arrow function

const functionD = (a,b) => {
   // return a + " " + b;    
   console.log(a,b); 
}
functionD("jahani", "Viqi"); 








//video part 2

//scope


//#
// var myFunc = function () {
//     var localVariable = ' I am local variable .';            //scope er moddhe ache tai var dia declare kora 
    
// };

// console.log(localVariable);                                 // tai fun er baire call korle variable access korte parbe na





//##
var localVariable2 = ' I am local variable out.';             //jehetu baire declare kora to pabe access 

var myFunc = function () {
    var localVariable2 = ' I am local variable .';
    
};
console.log(localVariable2);                           // out ->  I am local variable out.



//###

let localVariable = ' I am local variable out.';             

var myFunc = function () {
    var localVariable = ' I am local variable var .';

    console.log(localVariable);                         // out-> fun er modher ta dibe cz func call kora hoise ;I am local variable var.
};
myFunc();
       

//####
let localVariable1 = ' I am local variable out.';             

var myFunc = function () {
    let localVariable1 = ' I am local variable let.';

    console.log(localVariable1);                         // out-> let var ja e dew hok na kno func or local scope er vhitor er ta nibe ;

};                                                       //I am local variable let .
myFunc();








// parent scope child scope means ekta func er moddhe ar ek ta func;


function outerFunc(a) {                                                   //parent scope
    var outerFuncVariable = 'Hi there ,I am outer';

    console.log(outerFuncVariable);                                      // out-> Hi there ,I am outer     
    

        function innerFunc() {                                          // child scope  / 2nd func  /local scope
           var innerFuncVariable = 'Hi there , I am inner';
           console.log(innerFuncVariable);                             // out-> Hi there , I am inner
        }
        innerFunc();


    //console.log(innerFuncVariable);               //undefined  cz child scope er baire call kora hoise parent scope child scope er variable er access pabe na
}
 
outerFunc('function variable');







/*  js hoisting


// var
var name = "vivasoft";
console.log(name3);

console.log(name3);           //var undefined  set kore rakhe jehetu age console kora hoise pore declare kora hoise
var name = "vivasoft";
console.log(name3);                    // abr call kora hole nibe cz redeclare kora jai

                     

//let
console.log(name3);           //let undefined  set kore rakhe na age console kore pore declare korle o so reference error dai
let name = "vivasoft";
 

//const
console.log(name3);           //const undefined  set kore rakhe na age console kore pore declare korle o so syntax error dai
let name = "vivasoft";
 
                             */






//   Execution context


var name = "chadni jahani";            //1  

function first() {                     //2  ref
    var wel = "hello";                 //6
    second();                          //7
    console.log(wel + name)            //13

}                                          //  3 ta func execution context create hoise ai 3ta k rakha r jonno ar ekta global total 4 ta create 
function second() {                    //3
    var wel1 = "hiii";                 //8
    third();                           //9
    console.log(wel1 + name)           //12

}
function third() {                     //4
    var wel2 = "heyyyy";               //10
    console.log(wel2 + name)           //11

}                         

first();                               //5
 
//out_--  -->                 heyyyychadni jahani
                           // hiiichadni jahani
                           // hellochadni jahani                       
                           
                           
                           //global execution context follow kore  first in last out (FILO)








//      ### polyfilling


//console.log(Function.mybind)

let namee = { 
    firstName: 'Chadni',
    lastName: "Shabnam"

}

let getName=function(){

    console.log(this.firstName + ' ' + this.lastName)

}

let getFullName = getName.bind(namee)

getFullName();

//bind function



Function.prototype.mybind = function(namee){ 
    let obj = this
    return function(){ 
        obj.call(namee) 
    }

}

let getPotoFullName = getName.mybind(namee)

getPotoFullName();

                          





